name: "ScanCode action"
description: "Run ScanCode.io pipelines in your workflows"
inputs:
  pipeline-name:
    description: "Name of the pipeline"
    default: "scan_codebase"
  project-name:
    description: "Name of the project"
    default: "scancode-action"
  python-version:
    description: "Python version"
    default: "3.11"
  output-formats:
    description: "Output formats"
    default: "json xlsx spdx cyclonedx"
runs:
  using: "composite"
  steps:
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}
    - name: Set up environment
      shell: bash
      run: |
        echo "SECRET_KEY=$(openssl rand -base64 32)" >> $GITHUB_ENV
        echo $SECRET_KEY
        echo "SCANCODEIO_DB_ENGINE=django.db.backends.sqlite3" >> $GITHUB_ENV
        echo "SCANCODEIO_DB_NAME=sqlite3.db" >> $GITHUB_ENV
    - name: Install ScanCode.io
      shell: bash
      run: |
        pip install scancodeio
        scanpipe migrate
    - name: Create project and run the ${{ inputs.pipeline-name }} pipeline
      shell: bash
      run: scanpipe create-project ${{ inputs.project-name }}
        --input-url https://github.com/${GITHUB_REPOSITORY}/archive/${GITHUB_REF}.zip
        --pipeline ${{ inputs.pipeline-name }}
        --execute
    - name: Generate outputs
      id: scanpipe
      shell: bash
      run: |
        output=$(scanpipe output --project ${{ inputs.project-name }} --format ${{ inputs.output-formats }} --no-color)
        echo "output-paths=$output" >> $GITHUB_OUTPUT
    - name: Use scanpipe output in the next step
      run: echo "${{ steps.scanpipe.outputs.output-paths }}"
    - name: Upload outputs
      uses: actions/upload-artifact@v4
      with:
        name: scan-outputs
        path: ${{ outputs.scanpipe.value }}
